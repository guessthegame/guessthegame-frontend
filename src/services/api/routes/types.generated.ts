/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1': {
    get: operations['AppController_helloWold']
  }
  '/v1/auth/register': {
    post: operations['RegisterAuthController_register']
  }
  '/v1/auth/tokens': {
    put: operations['RefreshTokenAuthController_refresh']
    post: operations['CreateTokenAuthController_login']
    delete: operations['DeleteTokensAuthController_logout']
  }
  '/v1/auth/me': {
    get: operations['MeAuthController_me']
  }
  '/v1/screenshots': {
    post: operations['UploadScreenshotController_create']
  }
  '/v1/screenshots/image': {
    post: operations['UploadScreenshotController_upload']
  }
}

export interface components {
  schemas: {
    RegisterAuthControllerRequest: {
      username: string
      password: string
      browserToken?: string
      email?: string
    }
    RefreshTokenAuthControllerResponse: {
      accessToken: string
      refreshToken: string
    }
    CreateTokenAuthControllerRequest: {
      /** User username */
      username?: string
      /** User password */
      password?: string
      /** Browser Token (if user has not registered yet) */
      browserToken?: string
    }
    CreateTokenAuthControllerResponse: {
      accessToken: string
      refreshToken: string
    }
    RefreshTokenAuthControllerRequest: {
      /** Refresh Token, obtained after a login */
      refreshToken: string
    }
    DeleteTokensAuthRequest: {
      refreshToken: string
    }
    DeleteTokensAuthControllerResponse: {
      success: boolean
    }
    MeAuthControllerResponse: {
      uuid: string
      username: string | null
      email: string | null
    }
    UploadScreenshotControllerRequest: {
      imageId: string
      originalName: string
      year: number
      alternativeNames: string[]
    }
    UploadScreenshotControllerResponse: {
      id: number
    }
  }
}

export interface operations {
  AppController_helloWold: {
    parameters: {}
    responses: {
      200: unknown
    }
  }
  RegisterAuthController_register: {
    parameters: {}
    responses: {
      default: {
        content: {
          'application/json': components['schemas']['RefreshTokenAuthControllerResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RegisterAuthControllerRequest']
      }
    }
  }
  RefreshTokenAuthController_refresh: {
    parameters: {}
    responses: {
      default: {
        content: {
          'application/json': components['schemas']['RefreshTokenAuthControllerResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RefreshTokenAuthControllerRequest']
      }
    }
  }
  CreateTokenAuthController_login: {
    parameters: {}
    responses: {
      default: {
        content: {
          'application/json': components['schemas']['CreateTokenAuthControllerResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateTokenAuthControllerRequest']
      }
    }
  }
  DeleteTokensAuthController_logout: {
    parameters: {}
    responses: {
      default: {
        content: {
          'application/json': components['schemas']['DeleteTokensAuthControllerResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DeleteTokensAuthRequest']
      }
    }
  }
  MeAuthController_me: {
    parameters: {}
    responses: {
      default: {
        content: {
          'application/json': components['schemas']['MeAuthControllerResponse']
        }
      }
    }
  }
  UploadScreenshotController_create: {
    parameters: {}
    responses: {
      default: {
        content: {
          'application/json': components['schemas']['UploadScreenshotControllerResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UploadScreenshotControllerRequest']
      }
    }
  }
  UploadScreenshotController_upload: {
    parameters: {}
    responses: {
      201: unknown
    }
  }
}

export interface external {}
